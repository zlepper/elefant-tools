name: Build and test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2
      name: Cache dependencies
    
    - name: Build
      run: cargo build

    - uses: isbang/compose-action@v1.5.1
      with:
        compose-file: "./docker-compose.yaml"
        compose-flags: "--progress quiet"

    - name: Run tests
      run: cargo test

    - name: Run clippy
      if: always()
      run: |
        cargo clippy -- -D warnings
        cargo clippy --all-targets --all-features -- -D warnings

  build-for-linux:
    name: Build for linux
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2
      name: Cache dependencies

    - name: Build executable
      run: cargo build --release --package=elefant-sync

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: elefant-sync-linux-amd64
        path: target/release/elefant-sync

  build-for-windows:
    name: Build for windows
    runs-on: windows-latest
    needs:
      - test
    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2
      name: Cache dependencies

    - name: Build executable
      run: cargo build --release --package=elefant-sync

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: elefant-sync-windows-amd64
        path: target/release/elefant-sync.exe


  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
#    needs:
#      - test
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - uses: Swatinem/rust-cache@v2
        name: Cache dependencies
        with:
          cache-all-crates: true

      - name: Install dependencies
        run: |
          cargo install hyperfine
          cargo build --release
#
#      - name: Run benchmarks
#        run: |
#          chmod +x ./benchmarks/*.sh
#          ./benchmarks/run_benchmarks.sh
#        env:
#          ELEFANT_SYNC_PATH: target/release/elefant-sync

      - name: Upload benchmark results
        run: |
          cat ./benchmarks/results/export-as-sql.md >> $GITHUB_STEP_SUMMARY
          printf "\n\n"  >> $GITHUB_STEP_SUMMARY
          cat ./benchmarks/results/import-from-sql.md >> $GITHUB_STEP_SUMMARY
